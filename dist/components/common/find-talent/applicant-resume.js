"use strict";
"use client";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicantResume = ApplicantResume;
const jsx_runtime_1 = require("react/jsx-runtime");
const badge_1 = require("@/components/ui/badge");
const loading_spinner_1 = __importDefault(require("@/lib/loading-spinner"));
const utils_1 = require("@/lib/utils");
const lucide_react_1 = require("lucide-react");
// Type definitions based on your data structure
function ApplicantResume({ data }) {
    var _a, _b, _c, _d;
    console.log("Parent Data", data);
    const profileData = data === null || data === void 0 ? void 0 : data.profile;
    //   Loading or no data fallback
    if (!data) {
        return (0, jsx_runtime_1.jsx)(loading_spinner_1.default, {});
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-5", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col md:flex-row justify-between gap-6 mb-8", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex gap-6", children: (0, jsx_runtime_1.jsx)("div", { className: "flex flex-col md:flex-row md:items-center md:justify-between gap-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-1", children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-xl font-semibold text-gray-900", children: (data === null || data === void 0 ? void 0 : data.name) && (data === null || data === void 0 ? void 0 : data.name)
                                            ? `${data === null || data === void 0 ? void 0 : data.name}`
                                            : (profileData === null || profileData === void 0 ? void 0 : profileData.name) || "Unknown User" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm  font-medium", children: "2 years of exp" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "bg-green-200 border-green-200", children: (data === null || data === void 0 ? void 0 : data.status) === "active" ? "Open to work" : "Deactive" })] }) }) }), (0, jsx_runtime_1.jsxs)("div", { className: "text-right text-sm text-gray-600", children: [(0, jsx_runtime_1.jsx)("p", { children: `${profileData === null || profileData === void 0 ? void 0 : profileData.city}, ${profileData === null || profileData === void 0 ? void 0 : profileData.country}` }), (0, jsx_runtime_1.jsx)("p", { children: data === null || data === void 0 ? void 0 : data.email }), (0, jsx_runtime_1.jsx)("p", { children: profileData === null || profileData === void 0 ? void 0 : profileData.mobile })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Personal Overview" }), (0, jsx_runtime_1.jsx)("p", { className: "text-base text-gray-700 leading-relaxed", children: profileData === null || profileData === void 0 ? void 0 : profileData.bio })] }), (0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Work Experience" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-6", children: (_a = profileData === null || profileData === void 0 ? void 0 : profileData.workExperience) === null || _a === void 0 ? void 0 : _a.map((exp, index) => ((0, jsx_runtime_1.jsxs)("div", { className: "flex gap-4", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("div", { className: "w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: "h-6 w-6 text-gray-500" }) }) }), (0, jsx_runtime_1.jsxs)("div", { className: "flex-1", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-lg font-semibold text-gray-900", children: (exp === null || exp === void 0 ? void 0 : exp.jobTitle) || "Position Title" }), (0, jsx_runtime_1.jsx)("p", { className: " text-gray-600 font-medium", children: (exp === null || exp === void 0 ? void 0 : exp.companyName) || "Company Name" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-wrap gap-4 text-sm text-gray-500 mt-1 mb-2", children: [(exp === null || exp === void 0 ? void 0 : exp.location) && ((0, jsx_runtime_1.jsxs)("span", { className: "flex items-center gap-1", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.MapPin, { className: "h-3 w-3" }), exp === null || exp === void 0 ? void 0 : exp.location] })), (exp === null || exp === void 0 ? void 0 : exp.employmentType) && (0, jsx_runtime_1.jsxs)("span", { children: ["\u2022 ", exp.employmentType] }), exp.startDate && exp.endDate && ((0, jsx_runtime_1.jsxs)("span", { className: "flex items-center gap-1", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, { className: "h-3 w-3" }), new Date(exp.startDate).toLocaleDateString(), " -", " ", new Date(exp.endDate).toLocaleDateString()] })), exp.experience && (0, jsx_runtime_1.jsxs)("span", { children: ["\u2022 ", exp.experience] })] })] })] }, index))) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Education" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-4", children: profileData === null || profileData === void 0 ? void 0 : profileData.education.map((edu, index) => ((0, jsx_runtime_1.jsxs)("div", { className: "border-l-2 border-gray-200 pl-4", children: [(0, jsx_runtime_1.jsxs)("h4", { className: "font-semibold text-gray-900", children: [edu.degreeTitle || "Degree", edu.major && ` in ${edu.major}`] }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600 font-medium", children: edu.instituteName || "Institution" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-4 text-sm text-gray-500 mt-1", children: [edu.yearOfPassing && ((0, jsx_runtime_1.jsxs)("span", { children: ["Graduated: ", edu.yearOfPassing] })), edu.duration && (0, jsx_runtime_1.jsxs)("span", { children: ["\u2022 Duration: ", edu.duration] }), edu.cgpa && edu.scale && ((0, jsx_runtime_1.jsxs)("span", { children: ["\u2022 CGPA: ", edu.cgpa, "/", edu.scale] }))] })] }, index))) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Expartes" }), (_b = profileData === null || profileData === void 0 ? void 0 : profileData.expartes) === null || _b === void 0 ? void 0 : _b.map((expert) => ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "mx-0.5 text-md", children: expert }, expert)))] }), (0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Skills" }), (_c = profileData === null || profileData === void 0 ? void 0 : profileData.skills) === null || _c === void 0 ? void 0 : _c.map((skill) => ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "mx-0.5 text-md", children: skill }, skill)))] }), (profileData === null || profileData === void 0 ? void 0 : profileData.languages) && profileData.languages.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Languages" }), (_d = profileData === null || profileData === void 0 ? void 0 : profileData.languages) === null || _d === void 0 ? void 0 : _d.map((language, index) => ((0, jsx_runtime_1.jsx)("span", { className: "", children: language || "English" }, index)))] })), (profileData === null || profileData === void 0 ? void 0 : profileData.resume) && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-8", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Resume" }), (0, jsx_runtime_1.jsx)("div", { className: "flex items-center gap-2", children: (0, jsx_runtime_1.jsx)("a", { href: (0, utils_1.getImageUrl)(profileData === null || profileData === void 0 ? void 0 : profileData.resume), target: "_blank", rel: "noopener noreferrer", className: "text-blue-600 hover:text-blue-800 font-medium text-sm underline", children: "View Resume" }) })] }))] }));
}
